// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String
  name String
  image_url String @default("")
  is_logged_in Boolean @default(false)
  user_character user_character[]
  otp otp[]
  company_id Int?
  company company?
  user_room user_room[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model character {
  id Int @id @default(autoincrement())
  name String
  image String
  user_character user_character[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model user_character {
  id Int @id @default(autoincrement())
  user_id Int
  user user @relation(fields: [user_id], references: [id])
  character_id Int
  character character @relation(fields: [character_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model company {
  id Int @id @default(autoincrement())
  name String
  user_id Int @unique
  user user @relation(fields: [user_id], references: [id])
  room room[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model material {
  id Int @id @default(autoincrement())
  name String
  rotation Int
  width Int
  height Int
  walkable Boolean
  image_url String
  is_identical Boolean @default(true)
  room_material room_material[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model room_material {
  id Int @id @default(autoincrement())
  material_id Int
  material material @relation(fields: [material_id], references: [id])
  position_x Int
  position_y Int
  room_id Int
  room room @relation(fields: [room_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model room {
  id Int @id @default(autoincrement())
  name String
  entry_point_x Int @default(0)
  entry_point_y Int @default(0)
  company_id Int
  company company @relation(fields: [company_id], references: [id])
  room_material room_material[]
  user_room user_room[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model user_room {
  id Int @id @default(autoincrement())
  user_id Int
  user user @relation(fields: [user_id], references: [id])
  room_id Int
  room room @relation(fields: [room_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model otp {
  id Int @id @default(autoincrement())
  user_id Int
  user user @relation(fields: [user_id], references: [id])
  otp_number Int
  valid_until DateTime
  is_valid Int @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}